#ifndef CHIP8_H_
#define CHIP8_H_

#include <array>
#include <stack>

const int SIZE = 16;
const int MAXMEM = 4096;
const int FONTSIZE = 80;

class Chip8 {
  private:
    u_int16_t I;  // store memory addresses
    u_int16_t * PC; // program counter
    u_int8_t delay_t;   // delay timer
    u_int8_t sound_t;   // sound timer
    u_int8_t * SP; //stack pointer   
    
    std::array<u_int8_t, SIZE> keyboard;   // keyboard
    std::array <u_int8_t, MAXMEM> memory;   // memory
    std::array <u_int8_t, SIZE> registers; // V0 to VF, VF is carry flag
    std::array<u_int16_t, SIZE> stack; // TODO: implement stack funcs
    std::array <u_int8_t, FONTSIZE> font = {    // font
      0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
      0x20, 0x60, 0x20, 0x20, 0x70, // 1
      0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2:
      0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
      0x90, 0x90, 0xF0, 0x10, 0x10, // 4
      0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
      0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
      0xF0, 0x10, 0x20, 0x40, 0x40, // 7
      0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
      0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
      0xF0, 0x90, 0xF0, 0x90, 0x90, // A
      0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
      0xF0, 0x80, 0x80, 0x80, 0xF0, // C
      0xE0, 0x90, 0x90, 0x90, 0xE0, // D
      0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
      0xF0, 0x80, 0xF0, 0x80, 0x80};  // F

  public:
    void populate_memory();
    void show_memory();
    void init();
    void gfx();
};


#endif
